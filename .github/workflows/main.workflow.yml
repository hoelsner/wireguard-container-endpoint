name: main-branch workflow

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron:  '0 0 1 * *'
  workflow_dispatch:

env:
  IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/wireguard-container-endpoint

jobs:
  #
  # perform unittests on repos
  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.8
          cache: 'pip'
      - name: Install Python dependencies
        run: pip install -r requirements_dev.txt
      - name: Install required system packages
        run: sudo apt-get install -y wireguard wireguard-tools
      - name: Run Pylint on webapp
        run: pylint --rcfile=.pylintrc webapp
      - name: Run Unit-Tests on webapp
        env:
          WG_CONFIG_DIR: ../_local_data/wgconfig
          DATA_DIR: ../_local_data/data
        run: |
          mkdir -p _local_data/wgconfig
          mkdir -p _local_data/data
          cd webapp
          pytest

  #
  # update latest branch on push to main
  build-latest:
    needs: unit-tests
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Dockerhub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Build and push Docker image with Buildx (don't push on PR)
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v3
        env:
          DOCKER_BUILDKIT: 1
        with:
          context: .
          build-args: |
            BUILD_VERSION=latest
          push: ${{ github.event_name != 'pull_request' }}
          tags: docker.io/${{ env.IMAGE_NAME }}:latest
